[package]
name = "nickel"
version = "0.1.0"
authors = ["Nicl team"]
license = "MIT OR Apache-2.0"
readme = "README.md"
description = "Programmable configuration files."
edition = "2018"

[lib]
# The cdylib option is for WASM. Currently we only care about either the WASM
# lib or the binary. But if we are to make nickel accessible as a library, we'll
# have to have two different version of Cargo.toml (and maybe have a separate
# branch with a different cargo file just for the WASM. See
# https://github.com/rust-lang/cargo/issues/4881)
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "nickel"
path = "src/main.rs"

[features]
default = ["markdown", "repl", "binary"]
binary = ["structopt"]
markdown = ["binary", "termimad", "minimad"]
repl = ["binary", "rustyline", "rustyline-derive", "ansi_term"]
repl-wasm = ["wasm-bindgen", "js-sys", "serde_repr"]

[build-dependencies]
lalrpop = "0.16.2"

[dependencies]
lalrpop-util = "0.16.2"
regex = "0.2.1"
simple-counter = "0.1.0"
codespan = "0.9.5"
codespan-reporting = "0.9.5"
logos = "0.11.4"
serde = "1.0.117"
serde_json = "1.0.59"
serde_yaml = "0.8.15"
toml = "0.5.8"
void = "1"
sha-1 = "0.9.3"
sha2 = "0.9.3"
md-5 = "0.9.1"

structopt = { version = "0.3", optional = true }

termimad = { version = "0.9.1", optional = true }
# Use the same version as termimad
minimad = { version = "0.6.7", optional = true }

ansi_term = { version = "0.12", optional = true }

rustyline = {version = "7.1.0", optional = true}
rustyline-derive = { version = "0.4.0", optional = true }

wasm-bindgen = { version = "0.2", optional = true, features = ["serde-serialize"] }
js-sys = { version = "0.3.51", optional = true }
serde_repr = { version = "0.1", optional = true }

[dev-dependencies]
pretty_assertions = "0.5.1"
assert_matches = "1.4.0"
